-- Full Final Anti-AFK + GUI + Auto Rejoin + Auto Execute
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Player = Players.LocalPlayer

-- Settings
local Settings = {
    AntiAFKEnabled = true,
    AutoRejoinEnabled = true,
    AutoExecuteEnabled = false
}

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AntiAFKGui"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 250, 0, 210)
Frame.Position = UDim2.new(0.5, -125, 0.5, -100)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Frame.Active = true
Frame.Draggable = true

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1
Title.Text = "Anti-AFK Settings"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 24
Title.Parent = Frame

-- Create Toggle Function
local function createToggle(name, position, default, callback)
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 220, 0, 40)
    Toggle.Position = position
    Toggle.BackgroundColor3 = default and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    Toggle.Text = name .. ": " .. (default and "ON" or "OFF")
    Toggle.Font = Enum.Font.SourceSans
    Toggle.TextSize = 20
    Toggle.Parent = Frame

    local toggled = default
    Toggle.MouseButton1Click:Connect(function()
        toggled = not toggled
        Toggle.Text = name .. ": " .. (toggled and "ON" or "OFF")
        Toggle.BackgroundColor3 = toggled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
        callback(toggled)
    end)
end

-- Toggles
createToggle("Anti-AFK Enabled", UDim2.new(0, 15, 0, 50), true, function(value)
    Settings.AntiAFKEnabled = value
end)

createToggle("Auto Rejoin Enabled", UDim2.new(0, 15, 0, 100), true, function(value)
    Settings.AutoRejoinEnabled = value
end)

createToggle("Auto Execute after Rejoin", UDim2.new(0, 15, 0, 150), false, function(value)
    Settings.AutoExecuteEnabled = value
end)

-- Anti AFK Logic
Player.Idled:Connect(function()
    if Settings.AntiAFKEnabled then
        VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end
end)

-- Jump every 5 minutes
task.spawn(function()
    while task.wait(5 * 60) do -- every 5 minutes
        if Settings.AntiAFKEnabled then
            local humanoid = Player.Character and Player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
end)

-- Auto Rejoin on Disconnect
local function rejoin()
    task.wait(3) -- wait 3 seconds for smoother rejoin
    if Settings.AutoRejoinEnabled then
        TeleportService:Teleport(game.PlaceId, Player)
    end
end

Player.OnTeleport:Connect(function(state)
    if state == Enum.TeleportState.Failed then
        rejoin()
    end
end)

game:GetService("Players").PlayerRemoving:Connect(function(leavingPlayer)
    if leavingPlayer == Player then
        rejoin()
    end
end)

-- Auto Execute after Rejoin
if Settings.AutoExecuteEnabled then
    local autoExecScript = [[
        -- Auto-executed Anti-AFK on Rejoin
        loadstring(game:HttpGet("PASTE YOUR SCRIPT LINK HERE"))()
    ]]
    if not isfile then
        warn("[AutoExecute] Filesystem not available, can't auto-execute.")
    else
        if not isfile("AutoAFK_Rejoin.lua") then
            writefile("AutoAFK_Rejoin.lua", autoExecScript)
        end
        loadfile("AutoAFK_Rejoin.lua")()
    end
end

print("[Anti-AFK System] Loaded and Ready.")
